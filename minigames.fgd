@include "base.fgd"

// BASE
@PointClass base(Angles) studio("models/editor/playerstart.mdl") = info_player_counterterrorist:
    "This entity is a CT spawnpoint. For most gamemodes, this is the RED team. "
[
]

@PointClass base(Angles) studio("models/editor/playerstart.mdl") = info_player_terrorist:
    "This entity is a T spawnpoint. For most gamemodes, this is the BLUE team. "
[
]

@PointClass base(Angles) studio("models/editor/playerstart.mdl") = info_player_red:
    "This is a RED team spawnpoint. This is ONLY supported by Minigames. "
[
]

@PointClass base(Angles) studio("models/editor/playerstart.mdl") = info_player_blue:
    "This is a BLUE team spawnpoint. This is ONLY supported by Minigames. "
[
]

@PointClass iconsprite("editor/bullseye.vmt") = mg_weapon_spawner:
    "Weapon spawner entity for various Minigames gamemodes. Weapons are set in gamemode, map config WIP."
[
    level(string)     : "Level" : "1"    : "Level to use for weapon entities"
    minspawn(integer) : "Min. Time" : 10 : "Minimum time to wait between weapon spawns."
    maxspawn(integer) : "Max. Time" : 20 : "Maximum time to wait between weapon spawns."
]

@PointClass iconsprite("editor/bullseye.vmt") = mg_health_spawner:
    "Health spawning entity for various Minigames gamemodes."
[
    size(choices)     : "Size" : "Small" : "Size of healthkit to spawn" =
    [
        "small": "Small Healthkit"
        "large": "Large Healthkit"
    ]
    minspawn(integer) : "Min. Time" : 10 : "Minimum time to wait between spawns."
    maxspawn(integer) : "Max. Time" : 20 : "Maximum time to wait between spawns."
]

@PointClass = mg_team_control:
    "Replace colors for this map"
[
    redchange(choices): "Red Color" : "red" : "Color for the TEAM_RED (uses CT spawns)" =
    [
        "red" : "Red"
        "blue" : "Blue"
        "orange" : "Orange"
        "green" : "Green"
        "purple" : "Purple"
        "pink" : "Pink"
        "cyan" : "Cyan"
        "yellow" : "Yellow"
    ]

    bluechange(choices): "Blue Color" : "blue" : "Color for the TEAM_BLUE (uses T spawns)" =
    [
        "red" : "Red"
        "blue" : "Blue"
        "orange" : "Orange"
        "green" : "Green"
        "purple" : "Purple"
        "pink" : "Pink"
        "cyan" : "Cyan"
        "yellow" : "Yellow"
    ]
]

// BASE I/O
// No entities applicable.

// BALLS
// No entities applicable.

// BOMB TAG
// No entities applicable. 

// CLIMB
// No entities applicable.

// CRATE WARS
@PointClass studioprop() = crate_spawner_blue:
    "Crate spawner for Crate Wars. Creates BLUE crates."
[
    model(studio) : "Model to Spawn" : "models/props_junk/wood_crate001a.mdl" : "What model should this crate spawner spawn? Should be a breakable prop of some kind."
]

@PointClass studioprop() = crate_spawner_red:
    "Crate spawner for Crate Wars. Creates RED crates."
[
    model(studio) : "Model to Spawn" : "models/props_junk/wood_crate001a.mdl" : "What model should this crate spawner spawn? Should be a breakable prop of some kind."
]

@PointClass studioprop() = crate_blue:
    "Simple crate entity for Crate Wars. Owned by BLUE team."
[
    model(studio) : "Model to Spawn" : "models/props_junk/wood_crate001a.mdl" : "What model should this crate spawner spawn? Should be a breakable prop of some kind."
]

@PointClass studioprop() = crate_red:
    "Simple crate entity for Crate Wars. Owned by RED team."
[
    model(studio) : "Model to Spawn" : "models/props_junk/wood_crate001a.mdl" : "What model should this crate spawner spawn? Should be a breakable prop of some kind."
]

// CAPTURE THE FLAG
@PointClass iconsprite("editor/info_target.vmt") = ctf_blue_marker:
    "Display for the flag icon for BLUE team."
[
]

@PointClass iconsprite("editor/info_target.vmt") = ctf_red_marker:
    "Display for the flag icon for RED team."
[
]

@PointClass iconsprite("editor/info_target.vmt") = ctf_flagspawn:
    "Spawnpoint for the CTF flag. Only applies to 1Flag CTF."
[
]

@PointClass iconsprite("editor/info_target.vmt") = ctf_flagspawn_blue:
    "Spawnpoint for the Blue Team's CTF flag."
[
]

@PointClass iconsprite("editor/info_target.vmt") = ctf_flagspawn_red:
    "Spawnpoint for the Blue Team's CTF flag."
[
]

@SolidClass = func_blue_capture:
    "Capture zone for BLUE team. BLUE has to bring the flag back here."
[
]

@SolidClass = func_red_capture:
    "Capture zone for RED team. RED has to bring the flag back here."
[
]

// DEATHMATCH
// No entities applicable.
// Use mg_weapon_spawner for weapon spawners

// DODGEBALL
@PointClass iconsprite("editor/info_target.vmt") = db_ballspawn:
    "Spawnpoint for Dodgeball balls"
[
]

// DUCK HUNT
@SolidClass = duckhunt_win:
    "Winning trigger for Duck Hunt. Any runner that reaches this trigger will win the round."
[
]

// FREEZE TAG
// No entities applicable.

// GUN GAME
// No entities applicable.

// INCOMING
@PointClass iconsprite("editor/env_shooter.vmt") = inc_prop_spawner:
    "Spawnpoint for Incoming props."
[
]

@SolidClass = inc_prop_remover:
    "Removes any props that come into contact with the trigger."
[
]

@SolidClass = inc_winners_area:
    "Winning zone for Incoming. First player to reach this wins the round."
[
]

@SolidClass = inc_checkpoint_trigger:
    "Trigger zone for checkpoint stages."
[
    stage(integer) : "Checkpoint Stage" : 1 : "Stage of this checkpoint"
]

@PointClass base(Angles) studio("models/editor/playerstart.mdl") = inc_checkpoint_spawn:
    "Spawnpoints for a given checkpoint stage. Players will spawn here after passing the corresponding inc_checkpoint_trigger"
[
    stage(integer) : "Checkpoint Stage" : 1 : "Stage of this checkpoint"
]

@PointClass = inc_model_control:
    "Control each model preset for this level. Each preset will need one single control entity. This can either be one of the pre-defined presets, or you can add your own models."
[
    preset(choices): "Preset" : "Custom" : "Preset to use. Other settings have no effect, unless this is Custom." =
    [
        "Custom" : "Custom"
        "Geometric" : "Geometric"
        "Vehicles" : "Vehicles"
        "Geometric and Vehicles" : "Geometric and Vehicles"
        "Cubes And Spheres" : "Cubes And Spheres"
    ]

    delay(integer) : "Spawn Delay" : 2 : "Number of seconds between prop spawns. This may need to be adjusted for larger props, but try and keep this the same."
    material(string) : "Material Override" : "" : "Material override to use. Defaults to plastic. You might consider gmod_ice or gmod_bouncy."

    model0(studio) : "Custom Model 1" : "" : "Model for custom presets"
    model1(studio) : "Custom Model 2" : "" : "Model for custom presets"
    model2(studio) : "Custom Model 3" : "" : "Model for custom presets"
    model3(studio) : "Custom Model 4" : "" : "Model for custom presets"
    model4(studio) : "Custom Model 5" : "" : "Model for custom presets"
    model5(studio) : "Custom Model 6" : "" : "Model for custom presets"
    model6(studio) : "Custom Model 7" : "" : "Model for custom presets"
    model7(studio) : "Custom Model 8" : "" : "Model for custom presets"
    model8(studio) : "Custom Model 9" : "" : "Model for custom presets"
    model9(studio) : "Custom Model 10" : "" : "Model for custom presets. If you need more than 10 models, you can add more without SmartEdit."
]

// INFECTION
@PointClass base(Angles) studio("models/editor/playerstart.mdl") = info_player_zombie:
    "This is a team spawnpoint for INFECTED. This only works in Infection."
[
]

@PointClass base(Angles) studio("models/editor/playerstart.mdl") = info_player_survivor:
    "This is a team spawnpoint for INFECTED. This only works in Infection."
[
]

// JUNK JOUST
// No entities applicable.

// KINGMAKER
// No entities applicable.

// KNOCKBACK
// No entities applicable.
// Gamemode is deprecated.

// LASER DANCE
// No entities applicable.

// MICROGAMES
@PointClass iconsprite("editor/info_target.vmt") = microgames_marker:
    "Marker for various Microgames gamemodes"
[
    type(string) : "Type" : : "The type of marker this is"
    region(string) : "Region" : : "Region this marker is in"
]

@PointClass base(Angles) studio("models/editor/playerstart.mdl") = microgames_spawnpoint:
    "Enhanced spawnpoint for Microgames."
[
    region(string) : "Region" : : "Region this spawnpoint is in"
]

// MORTAR WARS
// No entities applicable.
// Gamemode is deprecated.

// ONE IN THE CHAMBER
// No entities applicable.

// PAINTBALL
// No entities applicable.
// All previous entities required for this gamemode are now deprecated.
// Use mg_weapon_spawner for weapon spawns.

// PITFALL
// Previous tile entities are now deprecated.
@PointClass = pf_settings:
    "Map color settings for Pitfall maps."
[
    colorstart(string) : "Color Start" : "0,255,128" : "Starting color of the platforms. RGB comma separated no spaces."
    colorend(string)   : "Color End"   : "255,0,128" : "Ending color of the platforms. RGB comma separated no spaces."
    colorbonus(string) : "Color Bonus" : "255,128,0" : "Color of platforms with bonuses. RGB comma separated no spaces."
]

@PointClass = pf_origin:
    "Origin marker for Pitfall maps. This should mark the center location of the bottom layer of platforms. Without this entity, this defaults to 0, 0, 0."
[
]

// POLTERGEIST
@PointClass iconsprite("editor/env_shooter.vmt") = pg_spawner:
    "Spawn point for Poltergeist entities"
[
    frequency(integer) : "Spawn Frequency" : 3 : "How often to respawn props at this location?"
]

@PointClass = pg_model_control:
    "Control the models that can be spawned in this map. If this entity exists in the map, none of the default models will spawn!"
[
    model0(studio) : "Custom Model 1" : "" : "Model option for prop spawns"
    model1(studio) : "Custom Model 2" : "" : "Model option for prop spawns"
    model2(studio) : "Custom Model 3" : "" : "Model option for prop spawns"
    model3(studio) : "Custom Model 4" : "" : "Model option for prop spawns"
    model4(studio) : "Custom Model 5" : "" : "Model option for prop spawns"
    model5(studio) : "Custom Model 6" : "" : "Model option for prop spawns"
    model6(studio) : "Custom Model 7" : "" : "Model option for prop spawns"
    model7(studio) : "Custom Model 8" : "" : "Model option for prop spawns"
    model8(studio) : "Custom Model 9" : "" : "Model option for prop spawns"
    model9(studio) : "Custom Model 10" : "" : "Model option for prop spawns"
    model10(studio) : "Custom Model 11" : "" : "Model option for prop spawns"
    model11(studio) : "Custom Model 12" : "" : "Model option for prop spawns"
    model12(studio) : "Custom Model 13" : "" : "Model option for prop spawns"
    model13(studio) : "Custom Model 14" : "" : "Model option for prop spawns"
    model14(studio) : "Custom Model 15" : "" : "Model option for prop spawns"
    model15(studio) : "Custom Model 16" : "" : "Model option for prop spawns"
    model16(studio) : "Custom Model 17" : "" : "Model option for prop spawns"
    model17(studio) : "Custom Model 18" : "" : "Model option for prop spawns"
    model18(studio) : "Custom Model 19" : "" : "Model option for prop spawns"
    model19(studio) : "Custom Model 20" : "" : "Model option for prop spawns. If you need more, you can add so without SmartEdit."
]

// SUPER SHOTGUNS
// No entities applicable.

// SNIPER WARS
// No entities applicable.

// SPECTRUM
// No entities applicable.

// SUICIDE BARRELS
// No entities applicable.
@PointClass = sb_model_control:
    "Control the models & skins used for barrels in this map. Barrels are randomly picked from these options."
[
    model0(studio) : "Custom Model 1" : "" : "1st barrel model."
    skin0(integer) : "Custom Skin 1" : "" : "1st barrel skin. Defaults to 0."
    model1(studio) : "Custom Model 2" : "" : "2nd barrel model"
    skin1(integer) : "Custom Skin 1" : "" : "2st barrel skin. Defaults to 0."
    model2(studio) : "Custom Model 3" : "" : "3rd barrel model"
    skin2(integer) : "Custom Skin 1" : "" : "3st barrel skin. Defaults to 0."
    model3(studio) : "Custom Model 4" : "" : "4th barrel model"
    skin3(integer) : "Custom Skin 1" : "" : "4st barrel skin. Defaults to 0."
    model4(studio) : "Custom Model 5" : "" : "5th barrel model. If you need more than 5 models, you can add more without SmartEdit."
    skin4(integer) : "Custom Skin 1" : "" : "5st barrel skin. Defaults to 0."
]