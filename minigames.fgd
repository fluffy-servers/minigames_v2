@include "base.fgd"

// Spawnpoint entities
// These are useful in all gamemodes
@PointClass base(Angles) studio("models/editor/playerstart.mdl") = info_player_counterterrorist:
    "This entity is a CT spawnpoint. For most gamemodes, this is the RED team. " +
    "Ideally, aim for about 32 spawnpoints in a map."
[
]

@PointClass base(Angles) studio("models/editor/playerstart.mdl") = info_player_terrorist:
    "This entity is a T spawnpoint. For most gamemodes, this is the BLUE team. " +
    "Ideally, aim for about 32 spawnpoints in a map."
[
]

@PointClass base(Angles) studio("models/editor/playerstart.mdl") = info_player_red:
    "This is a RED team spawnpoint. This is ONLY supported by Minigames. " +
    "Ideally, aim for about 32 spawnpoints in a map."
[
]

@PointClass base(Angles) studio("models/editor/playerstart.mdl") = info_player_blue:
    "This is a BLUE team spawnpoint. This is ONLY supported by Minigames. " +
    "Ideally, aim for about 32 spawnpoints in a map."
[
]

// Paintball entities
@SolidClass = func_red_home:
    "The home entity for the RED team. Respawns red players. Spawnpoints should be inside this volume."
[
]

@SolidClass = func_blue_home:
    "The home entity for the BLUE team. Respawns blue players. Spawnpoints should be inside this volume."
[
]

@PointClass iconsprite("editor/bullseye.vmt") = pb_weapon_spawner:
    "Weapon spawning entity for Paintball."
[
    type(string)    : "Weapon Types" : "grenade" : "Comma-separated list of weapons to spawn. Choose from: shotgun,bazooka,smg,crossbow,grenade,knife"
    minspawn(integer) : "Min. Time" : 10 : "Minimum time to wait between weapon spawns."
    maxspawn(integer) : "Max. Time" : 20 : "Maximum time to wait between weapon spawns."
]

// Crate Wars 2 entities
@PointClass studioprop() = crate_spawner_blue:
    "Crate spawner for Crate Wars. Creates BLUE crates."
[
    model(studio) : "Model to Spawn" : "models/props_junk/wood_crate001a.mdl" : "What model should this crate spawner spawn? Should be a breakable prop of some kind."
]

@PointClass studioprop() = crate_spawner_red:
    "Crate spawner for Crate Wars. Creates RED crates."
[
    model(studio) : "Model to Spawn" : "models/props_junk/wood_crate001a.mdl" : "What model should this crate spawner spawn? Should be a breakable prop of some kind."
]

@PointClass studioprop() = crate_blue:
    "Simple crate entity for Crate Wars. Owned by BLUE team."
[
    model(studio) : "Model to Spawn" : "models/props_junk/wood_crate001a.mdl" : "What model should this crate spawner spawn? Should be a breakable prop of some kind."
]

@PointClass studioprop() = crate_spawner_blue:
    "Simple crate entity for Crate Wars. Owned by RED team."
[
    model(studio) : "Model to Spawn" : "models/props_junk/wood_crate001a.mdl" : "What model should this crate spawner spawn? Should be a breakable prop of some kind."
]

// Pitfall entities
@PointClass = pf_settings:
    "Map color settings for Pitfall maps."
[
    colorstart(string) : "Color Start" : "0,255,128" : "Starting color of the platforms. RGB comma separated no spaces."
    colorend(string)   : "Color End"   : "255,0,128" : "Ending color of the platforms. RGB comma separated no spaces."
    colorbonus(string) : "Color Bonus" : "255,128,0" : "Color of platforms with bonuses. RGB comma separated no spaces."
]

// Duck Hunt entities
@SolidClass = duckhunt_win:
    "Winning trigger for Duck Hunt. Any runner that reaches this trigger will win the round."
[
]

// Incoming entities
@PointClass iconsprite("editor/env_shooter.vmt") = inc_prop_spawner:
    "Spawnpoint for Incoming props."
[
]

@SolidClass = inc_prop_remover:
    "Removes any props that come into contact with the trigger."
[
]

@SolidClass = inc_winners_area:
    "Winning zone for Incoming. First player to reach this wins the round."
[
]

// Poltergeist entities
@PointClass iconsprite("editor/env_shooter.vmt") = pg_spawner:
    "Spawn point for Poltergeist entities"
[
    frequency(integer) : "Spawn Frequency" : 3 : "How often to respawn props at this location?"
]

// Dodgeball entities
@PointClass iconsprite("editor/info_target.vmt") = db_ballspawn:
    "Spawnpoint for Dodgeball balls"
[
]

// Microgames entities
@PointClass iconsprite("editor/info_target.vmt") = microgames_marker:
    "Marker for various Microgames gamemodes"
[
    type(string) : "Type" : : "The type of marker this is"
    region(string) : "Region" : : "Region this marker is in"
]

@PointClass base(Angles) studio("models/editor/playerstart.mdl") = microgames_spawnpoint:
    "Enhanced spawnpoint for Microgames."
[
    region(string) : "Region" : : "Region this spawnpoint is in"
]


// Capture The Flag entities
@PointClass iconsprite("editor/info_target.vmt") = ctf_blue_marker:
    "Display for the flag icon for BLUE team."
[
]

@PointClass iconsprite("editor/info_target.vmt") = ctf_red_marker:
    "Display for the flag icon for RED team."
[
]

@PointClass iconsprite("editor/info_target.vmt") = ctf_flagspawn:
    "Spawnpoint for the CTF flag. Only applies to 1Flag CTF."
[
]

@PointClass iconsprite("editor/info_target.vmt") = ctf_flagspawn_blue:
    "Spawnpoint for the Blue Team's CTF flag."
[
]

@PointClass iconsprite("editor/info_target.vmt") = ctf_flagspawn_red:
    "Spawnpoint for the Blue Team's CTF flag."
[
]

@SolidClass = func_blue_capture:
    "Capture zone for BLUE team. BLUE has to bring the flag back here."
[
]

@SolidClass = func_red_capture:
    "Capture zone for RED team. RED has to bring the flag back here."
[
]
    
// Infection entities
@PointClass base(Angles) studio("models/editor/playerstart.mdl") = info_player_zombie:
    "This is a zombie spawnpoint for use in INFECTION. This spawns both player and NPC zombies. " +
    "Try to have these spawnpoints spread out, if possible."
[
]

@PointClass base(Angles) studio("models/editor/playerstart.mdl") = info_player_survivor:
    "This is a survivor spawnpoint for use in INFECTION. Consider using info_player_counterterrorist instead. " +
    "Ideally, aim for about 32 spawnpoints in a map."
[
]

// Generic weapon spawner entity
@PointClass iconsprite("editor/bullseye.vmt") = mg_weapon_spawner:
    "Weapon spawning entity for Deathmatch"
[
    level(string)     : "Level" : "1"    : "Level to use for weapon entities"
    minspawn(integer) : "Min. Time" : 10 : "Minimum time to wait between weapon spawns."
    maxspawn(integer) : "Max. Time" : 20 : "Maximum time to wait between weapon spawns."
]